import cuppa


class rexp( cuppa.header_library_dependency( 'rexp' ) ):

    def __call__( self, env, toolchain, variant ):
        super(rexp,self).__call__( env, toolchain, variant )

        env.AppendUnique( INCPATH = [
            '#include'
        ] )

        class build_lib(object):

            def __init__( self, linktype ):
                self._linktype = linktype

            def __call__( self, env ):
                object_file = env.Compile('#src/rexp/waiter.cpp')
                return [
                    getattr( env, "Build" + self._linktype + "Lib" )( 'rexp', object_file ),
                    getattr( env, "Boost" + self._linktype + "Libs" )( ['coroutine'] )
                ]

        env.AddMethod( build_lib( "Static" ), "StaticRexpLib" )
        env.AddMethod( build_lib( "Shared" ), "SharedRexpLib" )


cuppa.run(
    default_options = {
        'boost-version': "latest",
        'rexp-location': "."
    },
    dependencies = {
        'rexp': rexp
    },
    default_dependencies = [ 'boost', 'rexp' ],
)
